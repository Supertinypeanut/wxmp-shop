<style lang="less">

</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import '@/api/baseAPI.js'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/tabs/home',
      'pages/tabs/cates',
      'pages/tabs/search',
      'pages/tabs/cart',
      'pages/tabs/my',
      'pages/goods_detail/index',
      'pages/goods_list/index'
    ],
    usingComponents: {
      // 按钮
      'van-button': './assets/vant/button/index',
      // Sidebar 侧边导航
      'van-sidebar': './assets/vant/sidebar/index',
      'van-sidebar-item': './assets/vant/sidebar-item/index',
      // Card 商品卡片
      'van-card': './assets/vant/card/index',
      // Icon 图标
      'van-icon': './assets/vant/icon/index',
      // Tab 标签页
      'van-tab': './assets/vant/tab/index',
      'van-tabs': './assets/vant/tabs/index',
      // GoodsAction 商品导航
      'van-goods-action': './assets/vant/goods-action/index',
      'van-goods-action-icon': './assets/vant/goods-action-icon/index',
      'van-goods-action-button': './assets/vant/goods-action-button/index'
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#e00',
      navigationBarTitleText: '乐筝',
      navigationBarTextStyle: 'white'
    },
    tabBar: {
      selectedColor: '#e00',
      list: [
        {
          pagePath: 'pages/tabs/home',
          text: '首页',
          iconPath: '/assets/icons/home.png',
          selectedIconPath: '/assets/icons/home-active.png'
        },
        {
          pagePath: 'pages/tabs/cates',
          text: '分类',
          iconPath: '/assets/icons/cates.png',
          selectedIconPath: '/assets/icons/cates-active.png'
        },
        {
          pagePath: 'pages/tabs/search',
          text: '搜索',
          iconPath: '/assets/icons/search.png',
          selectedIconPath: '/assets/icons/search-active.png'
        },
        {
          pagePath: 'pages/tabs/cart',
          text: '购物车',
          iconPath: '/assets/icons/cart.png',
          selectedIconPath: '/assets/icons/cart-active.png'
        },
        {
          pagePath: 'pages/tabs/my',
          text: '我的',
          iconPath: '/assets/icons/my.png',
          selectedIconPath: '/assets/icons/my-active.png'
        }
      ]
    }
  }

  globalData = {
    // 收获地址
    address: null
  }

  // 设置收获地址
  setAddress(address) {
    this.globalData.address = address

    // 持久化地址
    this.setStorage()
  }

  // 数据持久化函数
  setStorage() {
    wepy.setStorage({
      key: 'globalData',
      data: this.globalData
    })
  }

  // 获取持久化数据
  async getStorage() {
    const data = await wepy.getStorage({
      key: 'globalData'
    }).catch(err => err)
    // 选择收货地址失败
    if (data.errMsg !== 'getStorage:ok') {
      return wepy.baseToast('获取本地数据失败！')
    }

    // 更新globalData数据对象
    this.globalData = data.data
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')

    // 拦截request请求
    this.intercept('request', {
      // 发出请求时的回调函数
      config (p) {
        wepy.showLoading({
          title: '数据加载中...'
        })
        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        return p
      },

      // 请求成功后的回调函数
      success (p) {
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },

      // 请求失败
      fail (p) {
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },

      // 请求成功
      complete (p) {
        wepy.hideLoading()
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      }
    })
  }

  onLaunch() {
    // 初始化全局数据对象globalData
    this.getStorage()
  }
}
</script>
